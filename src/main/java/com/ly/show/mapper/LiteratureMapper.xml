<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.show.mapper.LiteratureMapper">
  <resultMap id="BaseResultMap" type="com.ly.show.model.Literature">
    <id column="Index" jdbcType="INTEGER" property="index" />
    <result column="PMID" jdbcType="VARCHAR" property="pmid" />
    <result column="Title" jdbcType="VARCHAR" property="title" />
    <result column="Year" jdbcType="VARCHAR" property="year" />
    <result column="JournalTitle" jdbcType="VARCHAR" property="journaltitle" />
    <result column="Authors" jdbcType="VARCHAR" property="authors" />
    <result column="SearchType" jdbcType="VARCHAR" property="searchtype" />
    <result column="Condition" jdbcType="VARCHAR" property="condition" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Index, PMID, Title, Year, JournalTitle, Authors, SearchType, Condition
  </sql>
  <select id="selectByExample" parameterType="com.ly.show.model.LiteratureExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Literature
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Literature
    where Index = #{index,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Literature
    where Index = #{index,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ly.show.model.LiteratureExample">
    delete from Literature
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ly.show.model.Literature">
    insert into Literature (Index, PMID, Title, 
      Year, JournalTitle, Authors, 
      SearchType, Condition)
    values (#{index,jdbcType=INTEGER}, #{pmid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{year,jdbcType=VARCHAR}, #{journaltitle,jdbcType=VARCHAR}, #{authors,jdbcType=VARCHAR}, 
      #{searchtype,jdbcType=VARCHAR}, #{condition,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.show.model.Literature">
    insert into Literature
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="index != null">
        Index,
      </if>
      <if test="pmid != null">
        PMID,
      </if>
      <if test="title != null">
        Title,
      </if>
      <if test="year != null">
        Year,
      </if>
      <if test="journaltitle != null">
        JournalTitle,
      </if>
      <if test="authors != null">
        Authors,
      </if>
      <if test="searchtype != null">
        SearchType,
      </if>
      <if test="condition != null">
        Condition,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="pmid != null">
        #{pmid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="journaltitle != null">
        #{journaltitle,jdbcType=VARCHAR},
      </if>
      <if test="authors != null">
        #{authors,jdbcType=VARCHAR},
      </if>
      <if test="searchtype != null">
        #{searchtype,jdbcType=VARCHAR},
      </if>
      <if test="condition != null">
        #{condition,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ly.show.model.LiteratureExample" resultType="java.lang.Long">
    select count(*) from Literature
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Literature
    <set>
      <if test="record.index != null">
        Index = #{record.index,jdbcType=INTEGER},
      </if>
      <if test="record.pmid != null">
        PMID = #{record.pmid,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        Title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        Year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.journaltitle != null">
        JournalTitle = #{record.journaltitle,jdbcType=VARCHAR},
      </if>
      <if test="record.authors != null">
        Authors = #{record.authors,jdbcType=VARCHAR},
      </if>
      <if test="record.searchtype != null">
        SearchType = #{record.searchtype,jdbcType=VARCHAR},
      </if>
      <if test="record.condition != null">
        Condition = #{record.condition,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Literature
    set Index = #{record.index,jdbcType=INTEGER},
      PMID = #{record.pmid,jdbcType=VARCHAR},
      Title = #{record.title,jdbcType=VARCHAR},
      Year = #{record.year,jdbcType=VARCHAR},
      JournalTitle = #{record.journaltitle,jdbcType=VARCHAR},
      Authors = #{record.authors,jdbcType=VARCHAR},
      SearchType = #{record.searchtype,jdbcType=VARCHAR},
      Condition = #{record.condition,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ly.show.model.Literature">
    update Literature
    <set>
      <if test="pmid != null">
        PMID = #{pmid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        Title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        Year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="journaltitle != null">
        JournalTitle = #{journaltitle,jdbcType=VARCHAR},
      </if>
      <if test="authors != null">
        Authors = #{authors,jdbcType=VARCHAR},
      </if>
      <if test="searchtype != null">
        SearchType = #{searchtype,jdbcType=VARCHAR},
      </if>
      <if test="condition != null">
        Condition = #{condition,jdbcType=VARCHAR},
      </if>
    </set>
    where Index = #{index,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.show.model.Literature">
    update Literature
    set PMID = #{pmid,jdbcType=VARCHAR},
      Title = #{title,jdbcType=VARCHAR},
      Year = #{year,jdbcType=VARCHAR},
      JournalTitle = #{journaltitle,jdbcType=VARCHAR},
      Authors = #{authors,jdbcType=VARCHAR},
      SearchType = #{searchtype,jdbcType=VARCHAR},
      Condition = #{condition,jdbcType=VARCHAR}
    where Index = #{index,jdbcType=INTEGER}
  </update>
</mapper>